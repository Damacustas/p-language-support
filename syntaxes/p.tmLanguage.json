{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "P",
	"patterns": [
    {
      "match": "\\bif\\b|\\belse\\b|\\bwhile\\b|\\breturn\\b",
      "name": "keyword.control"
    },
    {
      "match": "\\bvar\\b",
      "name": "keyword"
    },
    {
      "match": "\\bassert\\b|\\bassume\\b",
      "name": "keyword.control"
    },
    {
      "match": "\\bsatisfies\\b|\\bmonitors\\b|\\bspec\\b|\\binclude\\b|\\bfun\\b|\\bnull\\b|\\bsizeof\\b|\\bpublic\\b|\\bin\\b|\\bdefault\\b|\\bdo\\b|\\bwith\\b|\\bevent\\b|\\binterface\\b|\\bmodule\\b|\\btype\\b|\\bsends\\b|\\bcreates\\b|\\bmachine\\b|\\breceives\\b|\\bstate\\b|\\bon\\b|\\bgoto\\b|\\bignore\\b|\\bdefer\\b|\\bmonitor\\b|\\bobserves\\b|\\bcold\\b|\\bhot\\b|\\bmain\\b|\\bmodel\\b|\\btest\\b|\\bsafety\\b|\\bimplementation\\b|\\bpush\\b|\\bnew\\b|\\benum\\b",
      "name": "keyword.other"
    },
    {
      "match": "\\bstart\\b",
      "name": "keyword.other"
    },
    {
      "match": "\\bentry\\b",
      "name": "support.function"
    },
    {
      "match": "\\bsend\\b|\\braise\\b",
      "name": "support.function"
    },
    {
      "match": "\\be[A-Z]\\w*\\b",
      "name": "string.regexp"
    },
    {
      "match": "\\b\\w*Machine\\b|\\bM[A-Z]\\w*\\b",
      "name": "storage.type"
    },
    {
      "match": "\\b\\w*Interface\\b|\\bI[A-Z]\\w*\\b",
      "name": "storage.type"
    },
    {
      "match": "\\b\\w\\w*Type\\b",
      "name": "storage.type"
    },
    {
      "match": "\\bint\\b|\\bbool\\b|\\bseq\\b|\\bmap\\b|\\bset\\b|\\bany\\b|\\bforeign\\b",
      "name": "storage.type"
    },
    {
      "match": "\\b\\w*V\\b",
      "name": "variable.parameter"
    },
    {
      "match": "\\bthis\\b",
      "name": "support.constant"
    },
    {
      "match": "\\btrue\\b|\\bfalse\\b",
      "name": "constant.numeric"
    },
    {
      "begin": "/\\*",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.p"
        }
      },
      "end": "\\*/",
      "name": "comment.block"
    },
    {
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.p"
        }
      },
      "match": "(//).*$\\n?",
      "name": "comment.line.double-slash"
    }
  ],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.p",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.p",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.p",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.p"
}